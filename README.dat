#EliadeSelector repository
https://github.com/barbes123/EliadeSorting

#LUTs respositories for ELIFANT/ELIGANT-TN/ELIADE
https://github.com/barbes123/onlineAnalysis.git 
https://github.com/barbes123/onlineEligant.git
https://github.com/barbes123/onlineEliade.git


# initial EliadeSorting
- git clone https://github.com/barbes123/EliadeSorting (preferably in home directory)
- Install nlohmann to alow json support: sudo apt install nlohmann-json3-dev 
- Add environmental variable: export ELIADE_LUT="$HOME/EliadeSorting" (to .bashrc)
- Compile the libraries in ~/EliadeSorting/lib (./setup.sh X where X is version of g++, default 17)
- To compile DelilaSelectorEliade.C (in root shell, .L DelilaSelectorEliade.C+)

# Data folder structure:
/exp1/root_files 		[for raw root  files]
/exp1/selector_files 	        [for analysis]
3   cp ~/DelilaSorting/run/[routing]/*.* ../exp1/selector_files
    cp ~/DelilaSorting/.rootlogon.C ../exp1/selector_files    
4. edit ../exp1/selector_files/Delila_selector.C to set data_dir the full path to the data files
5. Compile the libraries (only for DelilaSortingElifant). If it complains  
   cd ~/DelilaSorting/lib
   ./setup.sh 

7. To start the analysis run: ./run_sorting.sh Addback RUN_NBR V_NBR_FIRST V_NBR_LAST
	Addback = 0 no addback
	Addback = 1 addback


Merging Raw files
./merge_raw.sh first_run last_run 
it will produce from files run248_23_PuppEx.root -> run248_999_PuppEx.root (it cointains all stat from all files 248_0 -> 248_xxx)

Enjoy! 
